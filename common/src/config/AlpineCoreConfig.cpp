#include <algorithm>
#include <fstream>
#include <sstream>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <unordered_set>
#include <xlog/xlog.h>
#include <common/config/AlpineCoreConfig.h>
#include <common/version/version.h>

bool AlpineCoreConfig::load(const std::string& filename)
{
    std::ifstream file(filename);
    if (!file.is_open()) {
        xlog::warn("Failed to open Alpine core config: {}", filename);
        return false;
    }

    std::unordered_map<std::string, std::string> settings;
    std::unordered_set<std::string> processed;
    std::string line;

    while (std::getline(file, line)) {
        if (line.empty() || line[0] == ';' || line[0] == '[')
            continue;

        std::istringstream ss(line);
        std::string key, value;
        if (std::getline(ss, key, '=') && std::getline(ss, value)) {
            settings[key] = value;
        }
    }

    file.close();

    if (settings.count("VerticalSync")) {
        vsync = string_to_bool(settings["VerticalSync"]);
        processed.insert("VerticalSync");
    }

    for (const auto& [key, value] : settings) {
        if (!processed.contains(key) && key.rfind("AFCC", 0) == std::string::npos) {
            orphaned_lines.push_back(key + "=" + value);
        }
    }

    xlog::info("Loaded Alpine core config from {}", filename);
    return true;
}

void AlpineCoreConfig::save(const std::string& filename) const
{
    std::ofstream file(filename);
    if (!file.is_open()) {
        xlog::warn("Failed to write Alpine core config: {}", filename);
        return;
    }

    std::time_t current_time = std::time(nullptr);
    std::tm* now_tm = std::localtime(&current_time);

    file << "; Alpine Faction System Config File";
    file << "\n\n; This file is automatically generated by Alpine Faction.\n";
    file << "; Unlike alpine_settings.ini, this file is used by the base game and all mods.\n";
    file << "; Unless you really know what you are doing, manually editing it is NOT recommended.\n";
    file << "; Any edits made while the game or launcher are running will be discarded.\n\n";

    file << "\n[Metadata]\n";
    file << "; DO NOT edit this section.\n";
    file << "AFCCTimestamp=" << std::put_time(now_tm, "%Y-%m-%d %H:%M:%S") << "\n";
    file << "AFCCClientVersion=" << PRODUCT_NAME_VERSION << " (" << VERSION_CODE << ")\n";
    file << "AFCCFileVersion=" << AFCC_VERSION << "\n";

    // Write saved orphaned settings
    if (!orphaned_lines.empty()) {
        file << "\n[OrphanedSettings]\n";
        file << "; Items in this section were unrecognized by your Alpine Faction client.\n";
        file << "; They could be malformed or may require a newer version of Alpine Faction.\n";

        for (const std::string& orphaned_setting : orphaned_lines) {
            file << orphaned_setting << "\n";
        }
    }

    file << "\n[Configuration]\n";
    file << "VerticalSync=" << bool_to_string(vsync) << "\n";

    file.close();
    xlog::info("Saved Alpine core config to {}", filename);
}

bool AlpineCoreConfig::string_to_bool(const std::string& str)
{
    return str == "1" || str == "true" || str == "TRUE";
}

std::string AlpineCoreConfig::bool_to_string(bool val)
{
    return val ? "1" : "0";
}
